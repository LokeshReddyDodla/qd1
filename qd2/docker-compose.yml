version: '3.8'

services:
  # Qdrant Vector Database
  qdrant:
    image: qdrant/qdrant:latest
    container_name: qd2-qdrant
    ports:
      - "6333:6333"
      - "6334:6334"
    volumes:
      - qdrant_storage:/qdrant/storage
    environment:
      - QDRANT__SERVICE__HTTP_PORT=6333
      - QDRANT__SERVICE__GRPC_PORT=6334
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:6333/health"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped
    networks:
      - qd2-network

  # PostgreSQL Database (optional - for name resolution)
  postgres:
    image: postgres:16-alpine
    container_name: qd2-postgres
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_DB=patient_db
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init_postgres.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped
    networks:
      - qd2-network

  # MongoDB Database
  mongodb:
    image: mongo:7.0
    container_name: qd2-mongodb
    ports:
      - "27017:27017"
    volumes:
      - mongo_data:/data/db
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped
    networks:
      - qd2-network

  # FastAPI Application
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: qd2-app
    ports:
      - "1531:1531"
    environment:
      # Qdrant
      - QDRANT_HOST=qdrant
      - QDRANT_PORT=6333
      - QDRANT_COLLECTION_NAME=people_data
      - QDRANT_VECTOR_SIZE=1536
      
      # OpenAI (load from .env file)
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - OPENAI_EMBEDDING_MODEL=text-embedding-3-small
      - OPENAI_LLM_MODEL=gpt-4o-mini
      - OPENAI_LLM_TEMPERATURE=0.1
      - OPENAI_LLM_MAX_TOKENS=1000
      
      # PostgreSQL
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=5432
      - POSTGRES_DB=patient_db
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      
      # MongoDB
      - MONGO_URI=mongodb://mongodb:27017
      - MONGO_DB=patient_data
      
      # Application
      - LOG_LEVEL=INFO
      - ENVIRONMENT=production
      - EMBEDDING_BATCH_SIZE=32
      - INGEST_BATCH_SIZE=100
      - DEFAULT_TOP_K=10
      - MAX_TOP_K=50
    depends_on:
      qdrant:
        condition: service_healthy
      postgres:
        condition: service_healthy
      mongodb:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:1531/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    restart: unless-stopped
    networks:
      - qd2-network

networks:
  qd2-network:
    driver: bridge

volumes:
  qdrant_storage:
  postgres_data:
  mongo_data:

